
type typeCantidad {
    cantidad: String
}

type typeVivienda {
    _id: ID
    inner_id: String
    manzana: String
    territorio: String
    telefono: String
    direccion: String
    estado: String
    fechaUlt: String
    noAbonado: Boolean
}

type typeUser {
    _id: ID
    role: Int
    estado: Boolean
    email: String
    password: String
    group: Int
    isAuth: Boolean
    isAdmin: Boolean
    asign: [Int]
}



input inputCambiarEstado {
    token: String!
    inner_id: String!
    estado: String!
    noAbonado: Boolean!
}

input inputAsignar {
    token: String!
    user_id: String!
    terr: String!
}

input inputControlar {
    token: String!
    user_id: String!
    estado: Boolean!
    role: Int!
    group: Int!
}

input inputAvivienda {
    token: String!
    territorio: String!
    manzana: String!
    direccion: String!
    telefono: String!
    estado: String
    noAbonado: Boolean
    fechaUlt: String
}


# /////////////////////////////////////////////////////////////////////// #

type Subscription {
    "Escucha el estado de una manzana"
    escucharCambioDeEstado: typeVivienda
}

type Query {
    "Devuelve la cantidad de manzanas que hay en un territorio"
    countBlocks(terr:String!): typeCantidad

    "Devuelve todas las viviendas de un territorio"
    getApartmentsByTerritory(token:String!, terr:String!, manzana:String!): [typeVivienda]

    "Devuelve una vivienda por inner_id"
    getApartment(token:String!, inner_id:String!): typeVivienda

    "Devuelve todos los usuarios"
    getUsers(token:String!): [typeUser]
}


type Mutation {
    "Modifica un estado de vivienda"
    cambiarEstado(input:inputCambiarEstado): typeVivienda

    "Activa o desactiva a un usuario registrado o sus privilegios o cambia grupo"
    controlarUsuario(input:inputControlar): typeUser

    "Agrega una vivienda"
    agregarVivienda(input:inputAvivienda): typeVivienda

    "Asigna un territorio a un usuario"
    asignar(input:inputAsignar): typeUser

    "Desasigna un territorio a un usuario"
    desasignar(input:inputAsignar): typeUser
}
