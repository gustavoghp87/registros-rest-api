
type typeVivienda {
    _id: ID
    inner_id: String
    manzana: String
    territorio: String
    telefono: String
    direccion: String
    estado: String
    fechaUlt: String
    noAbonado: Boolean
}

type typeAsignado {
    email: String!
    asign: [Int]!
}

type typeActivado {
    _id: ID!
    email: String!
    estado: String!
}

type typeAdmin {
    _id: ID!
    email: String!
    role: Int!
}

type typeActividad {
    inner_id: String
    estado: String
    fechaUlt: String
    noAbonado: String
    direccion: String
    telefono: String
    territorio: String
    manzana: String
}

type typeUser {
    _id: ID
    role: Int
    estado: String
    actividad: [typeActividad]
    email: String
    password: String
    group: Int
    isAuth: Boolean
    isAdmin: Boolean
    asign: [Int]
}


input inputCambiarEstado {
    inner_id: String!
    estado: String!

}

input inputNoAbonado {
    inner_id: String!
    noAbonado: Boolean!

}

input inputAsignar {
    user_id: ID!
    terr: String!
}

input inputActivar {
    user_id: ID!
}

input inputAvivienda {
    territorio: String!
    manzana: String!
    direccion: String!
    telefono: String!
    estado: String
    noAbonado: Boolean
    fechaUlt: String
}


# /////////////////////////////////////////////////////////////////////// #

type Query {
    "Devuelve todas las viviendas de un territorio"
    getApartmentsByTerritory(terr:String!): [typeVivienda]

    "Devuelve una vivienda por inner_id"
    getApartment(inner_id:String!): typeVivienda

    "Devuelve todos los usuarios"
    getUsers: [typeUser]
}


type Mutation {
    "Modifica un estado"
    cambiarEstado(input:inputCambiarEstado!): typeVivienda

    "Modifica un no abonado"
    cambiarNoAbonado(input:inputNoAbonado!): typeVivienda

    "Agrega una vivienda"
    agregarVivienda(input:inputAvivienda!): typeVivienda

    "Asigna un territorio a un usuario"
    asignar(input:inputAsignar!): typeAsignado

    "Desasigna un territorio a un usuario"
    desasignar(input:inputAsignar!): typeAsignado

    "Activa a un usuario registrado"
    activar(input:inputActivar!): typeActivado

    "Desactiva a un usuario registrado"
    desactivar(input:inputActivar!): typeActivado

    "Hacer administrador a un usuario"
    hacerAdmin(input:inputActivar!): typeAdmin

    "Quitar de administrador a un usuario"
    deshacerAdmin(input:inputActivar!): typeAdmin
}
